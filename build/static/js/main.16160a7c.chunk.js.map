{"version":3,"sources":["translate/Item.module.scss","app/withLoadingSplash.module.scss","shared/icons/translate.svg","translate/Translate.module.scss","translate/Selector.module.scss","shared/icons/swap.svg","shared/Footer.module.scss","translate/Selector.js","translate/Item.js","shared/translations.js","shared/locales.js","translate/Translate.js","shared/Footer.js","app/withLoadingSplash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","message","container","icon","right","caption","heading","__webpack_require__","p","selectors","swap","Selector","_ref","selected","options","onChange","react_default","a","createElement","className","styles","value","map","_ref2","display","defaultProps","MessageItem","children","src","Translate","alt","Item","context","translation","pronounciation","left","shared_translations","ENGLISH","SPANISH","locales","state","nativeLocale","translationLocale","handleLocaleChange","targetLocale","event","selectedLocale","find","locale","target","_this","setState","Object","defineProperty","swapLocales","translateLocales","primary","secondary","translations","_this2","this","_this$state","translate_Selector","e","type","onClick","Swap","translate_Item","Item_MessageItem","Component","Footer","LoadingSplash","withLoadingSplash","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","isLoading","toggleIsLoading","inherits","createClass","key","setTimeout","withLoadingSplash_LoadingSplash","props","translate_Translate","shared_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0EACAA,EAAAC,QAAA,CAAkBC,QAAA,sBAAAC,UAAA,wBAAAC,KAAA,mBAAAC,MAAA,oBAAAC,QAAA,+DCAlBN,EAAAC,QAAA,CAAkBE,UAAA,qCAAAC,KAAA,gCAAAG,QAAA,mCAAAD,QAAA,qDCDlBN,EAAAC,QAAiBO,EAAAC,EAAuB,uDCCxCT,EAAAC,QAAA,CAAkBE,UAAA,6BAAAO,UAAA,6BAAAC,KAAA,6CCAlBX,EAAAC,QAAA,CAAkBE,UAAA,8CCDlBH,EAAAC,QAAiBO,EAAAC,EAAuB,kDCCxCT,EAAAC,QAAA,CAAkBE,UAAA,iOCIZS,EAAW,SAAAC,GAAA,IACfC,EADeD,EACfC,SACAC,EAFeF,EAEfE,QACAC,EAHeH,EAGfG,SAHe,OAKfC,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOlB,UAClBmB,MAAOR,GAAYA,EAASQ,MAC5BN,SAAUA,GAGRD,EAAQQ,IAAI,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,MAAOG,EAAVD,EAAUC,QAAV,OACVR,EAAAC,EAAAC,cAAA,UAAQG,MAAOA,GACZG,OAWXb,EAASc,aAAe,CACtBX,QAAS,IAGIH,wCC1BFe,EAAc,SAAAd,GAAA,IAAGe,EAAHf,EAAGe,SAAH,OACzBX,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOnB,SACpBe,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOjB,KAClByB,IAAKC,IACLC,IAAI,cAEJH,IA8BSI,EAtBF,SAAAR,GAAA,IACXS,EADWT,EACXS,QACAC,EAFWV,EAEXU,YACAC,EAHWX,EAGXW,eAHW,OAKXlB,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOlB,WACpBc,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOe,MAAOH,GAC9BhB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOhB,OACpB6B,EACDjB,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOf,SAClB6B,uBCoCME,EAAA,CACbC,QApEc,CACdA,QAAS,CACP,CACEL,QAAS,QACTC,YAAa,SAGjBK,QAAS,CACP,CACEN,QAAS,QACTC,YAAa,OACbC,eAAgB,QAElB,CACEF,QAAS,UACTC,YAAa,4BACbC,eAAgB,oCAElB,CACEF,QAAS,MACTC,YAAa,KACbC,eAAgB,MAElB,CACEF,QAAS,KACTC,YAAa,KACbC,eAAgB,MAElB,CACEF,QAAS,SACTC,YAAa,UACbC,eAAgB,iBAsCpBI,QAjCc,CACdA,QAAS,CACP,CACEN,QAAS,OACTC,YAAa,UAGjBI,QAAS,CACP,CACEL,QAAS,OACTC,YAAa,SAEf,CACED,QAAS,4BACTC,YAAa,WAEf,CACED,QAAS,KACTC,YAAa,OAEf,CACED,QAAS,KACTC,YAAa,MAEf,CACED,QAAS,UACTC,YAAa,aC/DNI,EAAU,CACrBhB,MAAO,UACPG,QAAS,WAQIe,EAAA,CACbF,EANqB,CACrBhB,MAAO,UACPG,QAAS,4BCyEIK,6MArEbW,MAAQ,CACNC,aAAcJ,EACdK,kBAAmBL,KAGrBM,mBAAqB,SAAAC,GAAY,OAAI,SAAAC,GACnC,IAAMC,EAAiBP,EACpBQ,KAAK,SAAAC,GAAM,OAAIA,EAAO3B,QAAUwB,EAAMI,OAAO5B,QAEhD6B,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBR,EAAeE,QAGlCQ,YAAc,kBAAMJ,EAAKC,SAAS,CAChCV,aAAcS,EAAKV,MAAME,kBACzBA,kBAAmBQ,EAAKV,MAAMC,kBAGhCc,iBAAmB,SAACC,EAASC,GAAV,OACjBC,EAAaF,EAAQnC,OAAOoC,EAAUpC,gFAE/B,IAAAsC,EAAAC,KAAAC,EAIHD,KAAKpB,MAFPC,EAFKoB,EAELpB,aACAC,EAHKmB,EAGLnB,kBAGIgB,EADejB,IAAiBC,EAGlC,KADAkB,KAAKL,iBAAiBd,EAAcC,GAGxC,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlB,WACrBc,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOX,WACrBO,EAAAC,EAAAC,cAAC4C,EAAD,CACEjD,SAAU4B,EACV3B,QAASyB,EACTxB,SAAU,SAACgD,GAAD,OAAOJ,EAAKhB,mBAAmB,eAAxBgB,CAAwCI,MAE3D/C,EAAAC,EAAAC,cAAA,UACE8C,KAAK,SACLC,QAASL,KAAKN,aAEdtC,EAAAC,EAAAC,cAAA,OACAC,UAAWC,IAAOV,KAClBkB,IAAKsC,IACLpC,IAAI,oBAGNd,EAAAC,EAAAC,cAAC4C,EAAD,CACEjD,SAAU6B,EACV5B,QAASyB,EACTxB,SAAU,SAACgD,GAAD,OAAOJ,EAAKhB,mBAAmB,oBAAxBgB,CAA6CI,OAGhEL,EACEA,EAAapC,IAAI,SAAAV,GAAA,IAAGoB,EAAHpB,EAAGoB,QAASC,EAAZrB,EAAYqB,YAAaC,EAAzBtB,EAAyBsB,eAAzB,OACjBlB,EAAAC,EAAAC,cAACiD,EAAD,CACEnC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,MAGlBlB,EAAAC,EAAAC,cAACkD,EAAD,qCA/DYC,8BCETC,EAPA,kBACbtD,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOlB,WACxBc,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sCCFEqD,EAAgB,kBACpBvD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlB,WACrBc,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOjB,KAClByB,IAAKC,IACLC,IAAI,SAENd,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOd,SAAtB,cAGAU,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOf,SAArB,wCCCWmE,EDGW,SAACC,GACzB,gBAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAA1B,EAAAE,OAAAyB,EAAA,EAAAzB,CAAAQ,KAAAe,GAAA,QAAAG,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAjC,EAAAE,OAAAgC,EAAA,EAAAhC,CAAAQ,MAAAgB,EAAAxB,OAAAiC,EAAA,EAAAjC,CAAAuB,IAAAW,KAAAC,MAAAX,EAAA,CAAAhB,MAAA4B,OAAAP,MACEzC,MAAQ,CAAEiD,WAAW,GADvBvC,EAEEwC,gBAAkB,WAAQxC,EAAKC,SAAS,CAAEsC,WAAYvC,EAAKV,MAAMiD,aAFnEvC,EAAA,OAAAE,OAAAuC,EAAA,EAAAvC,CAAAuB,EAAAD,GAAAtB,OAAAwC,EAAA,EAAAxC,CAAAuB,EAAA,EAAAkB,IAAA,oBAAAxE,MAAA,WAGwByE,WAAWlC,KAAK8B,gBAAiB,OAHzD,CAAAG,IAAA,SAAAxE,MAAA,WAMI,OACEuC,KAAKpB,MAAMiD,UACPzE,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAACuD,EAAqBb,KAAKoC,WATrCrB,EAAA,CAAqBN,aCJRG,kLATX,OACExD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACgF,EAAD,cALU7B,cCME8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.16160a7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Item_message__3dL6v\",\"container\":\"Item_container__2ARgT\",\"icon\":\"Item_icon__1dSRW\",\"right\":\"Item_right__1q8py\",\"caption\":\"Item_caption__1MDUn Item_right__1q8py\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"withLoadingSplash_container__26MIp\",\"icon\":\"withLoadingSplash_icon__3johZ\",\"heading\":\"withLoadingSplash_heading__3S7M4\",\"caption\":\"withLoadingSplash_caption__2beXs\"};","module.exports = __webpack_public_path__ + \"static/media/translate.fc6c1dcd.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Translate_container__2gNOd\",\"selectors\":\"Translate_selectors__1tL1w\",\"swap\":\"Translate_swap__1LVJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Selector_container__1yhQU\"};","module.exports = __webpack_public_path__ + \"static/media/swap.443d813a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__2o6-W\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Selector.module.scss';\n\nconst Selector = ({\n  selected,\n  options,\n  onChange,\n}) => (\n  <select\n    className={styles.container}\n    value={selected && selected.value}\n    onChange={onChange}\n  >\n    {\n      options.map(({ value, display }) =>\n        <option value={value}>\n          {display}\n        </option>\n      )\n    }\n  </select>\n);\n\nSelector.propTypes = {\n  options: PropTypes.array,\n};\n\nSelector.defaultProps = {\n  options: [],\n};\n\nexport default Selector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Translate from './../shared/icons/translate.svg';\n\nimport styles from './Item.module.scss';\n\nexport const MessageItem = ({ children }) => (\n  <li className={styles.message}>\n    <img\n      className={styles.icon}\n      src={Translate}\n      alt=\"Translate\"\n    />\n    { children }\n  </li>\n);\n\nMessageItem.propTypes = {\n  children: PropTypes.node,\n};\n\nconst Item = ({\n  context,\n  translation,\n  pronounciation,\n}) => (\n  <li className={styles.container}>\n    <div className={styles.left}>{context}</div>\n    <div className={styles.right}>\n      {translation}\n      <p className={styles.caption}>\n        {pronounciation}\n      </p>\n    </div>\n  </li>\n);\n\nItem.propTypes = {\n  context: PropTypes.string.isRequired,\n  translation: PropTypes.string.isRequired,\n  pronounciation: PropTypes.string,\n};\n\nexport default Item;\n","// TODO: support non-english translations\nconst ENGLISH = {\n  ENGLISH: [\n    {\n      context: 'Hello',\n      translation: 'Hola',\n    },\n  ],\n  SPANISH: [\n    {\n      context: 'Hello',\n      translation: 'Hola',\n      pronounciation: 'o-la',\n    },\n    {\n      context: 'Goodbye',\n      translation: 'Buenas Dias/Noches/Tardes',\n      pronounciation: 'bwe-nas dee-yas/noh-ches/tar-des',\n    },\n    {\n      context: 'Yes',\n      translation: 'Si',\n      pronounciation: 'si',\n    },\n    {\n      context: 'No',\n      translation: 'No',\n      pronounciation: 'no',\n    },\n    {\n      context: 'Thanks',\n      translation: 'Gracias',\n      pronounciation: 'grah-si-ahs',\n    },\n  ],\n};\n\nconst SPANISH = {\n  SPANISH: [\n    {\n      context: 'Hola',\n      translation: 'Hello',\n    },\n  ],\n  ENGLISH: [\n    {\n      context: 'Hola',\n      translation: 'Hello',\n    },\n    {\n      context: 'Buenas Dias/Noches/Tardes',\n      translation: 'Goodbye',\n    },\n    {\n      context: 'Si',\n      translation: 'Yes',\n    },\n    {\n      context: 'No',\n      translation: 'No',\n    },\n    {\n      context: 'Gracias',\n      translation: 'Thanks',\n    },\n  ],\n};\n\nexport default {\n  ENGLISH,\n  SPANISH,\n};\n","export const ENGLISH = {\n  value: 'ENGLISH',\n  display: 'English',\n};\n\nexport const SPANISH = {\n  value: 'SPANISH',\n  display: 'Spanish',\n};\n\nexport default [\n  ENGLISH,\n  SPANISH,\n]\n","import React, { Component } from 'react';\n\nimport Selector from './Selector';\nimport Item, { MessageItem } from './Item';\nimport Swap from './../shared/icons/swap.svg';\nimport translations from './../shared/translations';\nimport locales, { ENGLISH } from './../shared/locales';\n\nimport styles from './Translate.module.scss';\n\nclass Translate extends Component {\n  state = {\n    nativeLocale: ENGLISH,\n    translationLocale: ENGLISH,\n  }\n\n  handleLocaleChange = targetLocale => event => {\n    const selectedLocale = locales\n      .find(locale => locale.value === event.target.value);\n\n    this.setState({ [targetLocale]: selectedLocale });\n  }\n\n  swapLocales = () => this.setState({\n    nativeLocale: this.state.translationLocale,\n    translationLocale: this.state.nativeLocale,\n  });\n\n  translateLocales = (primary, secondary) =>\n    translations[primary.value][secondary.value]\n\n  render() {\n    const {\n      nativeLocale,\n      translationLocale,\n    } = this.state;\n    const isSameLocale = nativeLocale === translationLocale;\n    const translations = !isSameLocale\n      ? this.translateLocales(nativeLocale, translationLocale)\n      : null;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.selectors}>\n          <Selector\n            selected={nativeLocale}\n            options={locales}\n            onChange={(e) => this.handleLocaleChange('nativeLocale')(e)}\n          />\n          <button\n            type=\"button\"\n            onClick={this.swapLocales}\n          >\n            <img\n            className={styles.swap}\n            src={Swap}\n            alt=\"Swap languages\"\n            />\n          </button>\n          <Selector\n            selected={translationLocale}\n            options={locales}\n            onChange={(e) => this.handleLocaleChange('translationLocale')(e)}\n          />\n        </div>\n        { translations\n          ? translations.map(({ context, translation, pronounciation }) =>\n            <Item\n              context={context}\n              translation={translation}\n              pronounciation={pronounciation}\n            />\n          )\n          : <MessageItem>Select a translation</MessageItem>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Translate;\n","import React from 'react';\n\nimport styles from './Footer.module.scss';\n\n// TODO: add functionality\nconst Footer = () => (\n  <footer className={styles.container}>\n    <div>Translate</div>\n    <div>Saved</div>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport Translate from './../shared/icons/translate.svg';\n\nimport styles from './withLoadingSplash.module.scss';\n\nconst LoadingSplash = () => (\n  <div className={styles.container}>\n    <img\n      className={styles.icon}\n      src={Translate}\n      alt=\"Logo\"\n    />\n    <h1 className={styles.heading}>\n      small talk\n    </h1>\n    <p className={styles.caption}>the tiny phrasebook for travellers</p>\n  </div>\n);\n\nconst withLoadingSplash = (WrappedComponent) => {\n  return class extends Component {\n    state = { isLoading: true }\n    toggleIsLoading = () => { this.setState({ isLoading: !this.state.isLoading }); }\n    componentDidMount() { setTimeout(this.toggleIsLoading, 2000); }\n\n    render() {\n      return (\n        this.state.isLoading\n          ? <LoadingSplash />\n          : <WrappedComponent {...this.props} />\n      );\n    }\n  };\n}\n\n\nexport default withLoadingSplash;\n","import React, { Component } from 'react';\n\nimport Translate from './translate/Translate';\nimport Footer from './shared/Footer';\nimport withLoadingSplash from './app/withLoadingSplash';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Translate />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withLoadingSplash(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}